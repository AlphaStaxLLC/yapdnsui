extends layout

block content
  div.container-fluid
  // Page header
  .page-header
        h2
          | Domains / #{data.name}
          | &nbsp;
          small= data.records.length
            | &nbsp; records
        div.btn-group.pull-right(style='margin-bottom: 10px;')
            button.btn.btn-default.dropdown-toggle(href="#", data-toggle="dropdown")
                | Actions
                span.caret
            ul.dropdown-menu(role="menu")
                li
                  a(href='#', rel="tooltip", title="Send a DNS NOTIFY to all slaves")
                   span.glyphicon.glyphicon-retweet
                   | &nbsp; Notify
                li
                  a(href='#', rel="tooltip", title="Retrieves the zone from the master")
                   span.glyphicon.glyphicon-random
                   | &nbsp; Retrieve
                 li
                   a(href='#', rel="tooltip", title="Verify zone contents/configuration")
                    span.glyphicon.glyphicon-ok
                    | &nbsp; Verify
                 li.divider
                 li
                   a(href='#', rel="tooltip", title="View metadata")
                    span.glyphicon.glyphicon-eye-open
                    | &nbsp; Zone Metadata
                 li
                   a(href='#', rel="tooltip", title="Manage Keys")
                    span.glyphicon.glyphicon-asterisk
                    | &nbsp; CryptoKeys
     .modal.fade.in(id="del-record-modal", tabindex="-1", role="dialog", aria-labelledby="del-record-label", aria-hidden="true")
       .modal-dialog
        .modal-content
         .modal-header
          button(type="button", class="close", data-dismiss="modal", aria-hidden="true") &times;
          h4(class="modal-title", id="del-record-label")
            #mod-delete-operation
         .modal-body
          .alert.alert-warning
            p
              strong Warning!
            | This operation will delete the 
            strong#mod-delete-text-name 
            | &nbsp; record.<br> Are you sure you want to do this ?
         .modal-footer
          a.btn.btn-default(href='#', data-dismiss='modal', aria-hidden="true") Cancel
          a.btn.btn-danger#mod-delete-submit(href='') Delete record

  div
      table.table.table-striped.table-condensed.table-hover.records
        thead
          tr
            th.records-head-name Name
            th.records-head-type Type
            th.records-head-prio Prio
            th.records-head-content Content
            th.records-head-ttl TTL
            th.records-head-disable Disabled
            th.records-head-action
        tbody
          tr.records-form
             form.form.form-horizontal(id="form-add-record", method='POST', enctype='application/json', action="/servers/#{serverselected.id}/records/save/#{data.id}")
               td.records-input-name
                 div.form-group
                   input.form-control(name="name", id="mod-edit-recordname", type="text", placeholder="eg. www or leave empty")
               td.records-input-type
                 select.selectpicker(name="type", id="mod-edit-recordtype")
                   - var DNSTYPE = ['A', 'AAAA', 'CERT', 'CNAME', 'HINFO', 'KEY', 'LOC', 'MX', 'NAPTR', 'NS', 'PTR', 'RP', 'SOA', 'SPF', 'SSHFP', 'SRV', 'TXT']
                   - each item in DNSTYPE
                      option(value="#{item}")= item
               td.records-input-prio
                 input.form-control(name="priority", id="mod-edit-recordprio", type="text", placeholder="0", value="0")
               td.records-input-content
                 div.form-group
                    input.form-control(name="content", id="mod-edit-recordcontent", type="text", placeholder="eg. 192.0.43.10, web01.example.com")
               td.records-input-ttl
                 input.form-control(name="ttl", id="mod-edit-recordttl", type="text", value="3600")
               td.records-input-disabled
                 input.btn-small(name="disabled", id="mod-edit-recorddisabled", type="checkbox", value="false")
               td.records-input-action
                 div.btn-toolbar
                   div.btn-group.navbar-right
                      button.btn.btn-default.btn-xs(type="reset", id="mod-edit-recordreset") Clear
                      button.btn.btn-success.btn-xs(type="submit", id="mod-edit-recordsubmit") Save
          each item in data.records
            tr
                  td.records-value-name= item.name
                  td.records-value-type= item.type
                  td.records-value-prio= item.priority
                  td.records-value-content= item.content
                  td.records-value-ttl= item.ttl
                  td.records-value-disabled= item.disabled
                  td.records-value-action
                   div.btn-toolbar
                     div.btn-group.navbar-right
                       -if (item.type == "A" || item.type == "AAAA")
                          button.btn.btn-default.btn-xs(id="2ptr-record", href="#", rel="tooltip", title="Create PTR record from this")
                            span.glyphicon.glyphicon-retweet
                       button.btn.btn-default.btn-xs.edit-record(data-toggle="modal", data-target="#edit-record", rel="tooltip", title="Edit record", data-name="#{item.name}", data-type="#{item.type}", data-content="#{item.content}", data-ttl="#{item.ttl}", data-disabled="#{item.disabled}")
                         span.glyphicon.glyphicon-edit
                       button.btn.btn-danger.btn-xs.del-record(data-toggle="modal", data-target="#del-record", rel="tooltip", title="Delete record", data-name="#{item.name}", data-content="#{item.content}", data-type="#{item.type}")
                         span.glyphicon.glyphicon-remove

  include inc/footer

  // Bootstrap plugin select
  link(rel='stylesheet', href='/stylesheets/bootstrap-select.min.css')
  script(src='/javascripts/bootstrap-select.min.js')
  // Bootstrap plugin checkbox
  link(rel='stylesheet', href='/bootstrap-checkbox-master/css/bootstrap-checkbox.css')
  script(src='/bootstrap-checkbox-master/js/bootstrap-checkbox.js')
  // Bootstrap plugin form validator
  link(rel='stylesheet', href='/bootstrapvalidator-dist-0.5.0/css/bootstrapValidator.min.css')
  script(src='/bootstrapvalidator-dist-0.5.0/js/bootstrapValidator.min.js')

  | <script type="text/javascript">
  | $(document).ready(function() {
  |  $(document).on("click", ".edit-record", function () {
  |      $('#mod-edit-recordname').val( $(this).data('name') );
  |      //$('#mod-edit-recordtype').val( $(this).data('type') );
  |      $('.selectpicker').selectpicker('val', $(this).data('type') );
  |      $('#mod-edit-recordprio').val( $(this).data('priority') );
  |      $('#mod-edit-recordcontent').val( $(this).data('content'));
  |      $('#mod-edit-recordttl').val( $(this).data('ttl') );
  |      //$('#mod-edit-recorddisabled').prop('checked', $(this).data('disabled') );
  |      //$('#mod-edit-recorddisabled').checkbox('click');
  |      //$('#mod-edit-recorddisabled').checkbox()[0].checked;
  |      $('#mod-edit-recordsubmit').attr("href", "/servers/#{serverselected.id}/records/save/#{data.id}");
  |  });
  |  $(document).on("click", ".del-record", function () {
  |      var RecordName = $(this).data('name');
  |      var RecordContent = $(this).data('content');
  |      var RecordType = $(this).data('type');
  |      $('#mod-delete-operation').html("Delete "+RecordName);
  |      $('#mod-delete-text-name').html(RecordContent +" "+ RecordType);
  |      $('#mod-delete-submit').attr("href", "/servers/#{serverselected.id}/records/del/#{data.id}/"+RecordName+"/"+RecordType);
  |      $('#del-record-modal').modal('show');
  |  });
  |  $('#mod-edit-recordtype').selectpicker();
  |  $('#mod-edit-recorddisabled').checkbox({
  |      buttonStyle: 'btn-danger',
  |      buttonStyleChecked: 'btn-success',
  |      checkedClass: 'glyphicon glyphicon-check',        
  |      uncheckedClass: 'glyphicon glyphicon-unchecked'
  |  });
  |  $('#form-add-record').bootstrapValidator({
  |      message: 'This value is not valid',
  |      feedbackIcons: {
  |          valid: 'glyphicon glyphicon-ok',
  |          invalid: 'glyphicon glyphicon-remove',
  |          validating: 'glyphicon glyphicon-refresh'
  |      },
  |      fields: {
  |          content: {
  |              message: 'The content is not valid',
  |              validators: {
  |                  notEmpty: {
  |                      message: 'The content is required and cannot be empty'
  |                  },
  |                  regexp: {
  |                      regexp: /^[a-zA-Z0-9_\.-]+$/,
  |                      message: 'The content can only consist of alphabetical, number and underscore and dot'
  |                  }
  |              }
  |          }
  |      }
  |      })
  |      .on('error.field.bv', function(e, data) {
  |          console.log(data.field, data.element, '-->error');
  |      })
  |      .on('success.field.bv', function(e, data) {
  |          console.log(data.field, data.element, '-->success');
  |      });
  | });
  | </script>
