{"name":"yaPDNSui","tagline":"Yet Another PowerDNS web interface","body":"yapdnsui\r\n========\r\n\r\n*Yet Another PowerDNS web interface*\r\n\r\nThe ultimate goal is to produce a slick web interface to [PowerDNS](http://www.powerdns.com/) that\r\nwill let you fully operate your PowerDNS instance via the official [PowerDNS API](https://github.com/PowerDNS/pdnsapi).\r\n\r\nThe application should let you do add/delete/update domains and records as well as graph\r\nstatistics and list/update configuration items *live* from one or multiple PowerDNS instance via the PowerDNS API.\r\n\r\nIn addition, the application should let you manage DNSSEC zones and zone metadata.\r\n\r\nIt is not just another PowerDNS UI, it is the first to use the [PowerDNS API](https://github.com/PowerDNS/pdnsapi), therefor to be backend-agnostic and DNSSEC aware.\r\n\r\nCurrently, you can list the configuration and see live statistics in a graph and list all the domains and records for demonstration purpose.\r\n\r\nYou can checkout the web interface using the [live demo](http://yapdnsui-xbgmsharp.rhcloud.com/) running on OpenShift cloud.\r\n\r\nYou are welcome to contribute.\r\n\r\n![yapdnsui_livestats]\r\n(https://github.com/xbgmsharp/yapdnsui/raw/master/misc/screenshot_livestats.png)\r\n\r\n![yapdnsui_config]\r\n(https://github.com/xbgmsharp/yapdnsui/raw/master/misc/screenshot_config.png)\r\n\r\n![yapdnsui_domains]\r\n(https://github.com/xbgmsharp/yapdnsui/raw/master/misc/screenshot_domains.png)\r\n\r\n![yapdnsui_records]\r\n(https://github.com/xbgmsharp/pdnsui/raw/master/misc/screenshot_records.png)\r\n\r\nyapdnsui Prereqs\r\n----------------\r\n\r\nYou need [NodeJS](http://nodejs.org) v0.10.x+ for this application to work.\r\nIt might work with lower requirements but I didn't test.\r\n\r\nPowerDNS Prereqs\r\n----------------\r\nYes, you need a [PowerDNS](http://www.powerdns.com/) or recursor to try this application out.\r\n\r\nYou need to enable the [PowerDNS API](https://github.com/PowerDNS/pdnsapi) on your PowerDNS instances.\r\n\r\nConfigure as follows:\r\n```\r\nwebserver=yes\r\nwebserver-address=127.0.0.1\r\nwebserver-port=8081\r\nwebserver-password=changeme\r\nexperimental-json-interface=yes\r\n```\r\n\r\n* Restart\r\n```bash\r\n$ /etc/init.d/pdns restart\r\n```\r\n\r\n* Test\r\n```bash\r\n$ curl -v http://a:changeme@localhost:8081/\r\n```\r\n\r\nInstalling\r\n----------\r\n\r\n* Clone the repository\r\n\r\n```bash\r\ngit clone https://leucos@github.com/xbgmsharp/yapdnsui.git\r\ncd yapdnsui\r\n```\r\n\r\n* Install dependencies\r\n\r\n```bash\r\nnpm install\r\n```\r\n\r\n* Start the application \r\n\r\n```bash\r\nPORT=8080 DEBUG=yapdnsui node bin/www\r\n```\r\n\r\n* Point your browser to: [http://localhost:8080/] (http://localhost:8080/)\r\n* Enjoy!\r\n\r\n_Note_ : yaPDNSui use a sqlite memory database to store PowerDNS instances details.\r\nAs an advantage, you don't need to configure anything outside of the webgui.\r\nHowever you need to add a PowerDNS instances to the configuration after each application start.\r\nYou can access the PowerDNS server manage interface using the menu on the right or by poinyour browser to '/server'.\r\n\r\nTest using Docker\r\n-----------------\r\n\r\n* Install Docker\r\n[Install documentation of Docker](https://docs.docker.com/installation/)\r\n\r\nThe deb package are valid for Ubuntu and Debian.\r\n\r\n```bash\r\n$ cat > /etc/apt/sources.list.d/docker.list\r\ndeb http://get.docker.io/ubuntu docker main\r\n$ apt-get update && apt-get install lxc-docker\r\n```\r\n\r\n* Build the images\r\nThe build process might take some time while it download the origin nodejs image.\r\n\r\n```bash\r\n$ docker build --rm=true --no-cache=true -t xbgmsharp/yapdnsui github.com/xbgmsharp/yapdnsui.git\r\nor\r\n$ docker build --rm=true --no-cache=true -t xbgmsharp/yapdnsui\r\n```\r\n\r\n* Run the container\r\n```bash\r\n$ docker run -d -p 22:22 -p 8080:8080 -t xbgmsharp/yapdnsui\r\nor\r\n$ docker run -i --rm -p 22:22 -p 8080:8080 -t xbgmsharp/yapdnsui /bin/bash\r\n```\r\n\r\n* check the IP\r\n```bash\r\n$ docker ps -a\r\n$ docker inspect CONTAINER_ID | grep IPA\r\nor\r\n$ docker ps -a | grep yapdnsui  | awk '{print $1}' | xargs docker inspect | grep IPAddress\r\nor\r\n$ ssh $(docker ps -a | grep yapdnsui  | awk '{print $1}' | xargs docker inspect | grep IPAddress | awk '{print $2}' | tr -d '\"' | tr -d ',' )\r\n```\r\n\r\n* Login in the container via SSH\r\nuser is root and password is admin\r\n```bash\r\n$ ssh root@172.17.0.x\r\n```\r\n\r\n* Review logs\r\n```bash\r\n# docker logs CONTAINER_ID\r\n  yapdnsui Express server listening on port 8080 +0ms\r\n```\r\n\r\n* Point your browser to: [http://172.17.0.x:8080/] (http://172.17.0.x:8080/)\r\n* Enjoy!\r\n\r\nIf the application crash. The container exit.\r\nYou can fillup an issue and add the backtrace or you fix it.\r\nFrom a SSH shell, you can restart the application.\r\n\r\nSecure yapdnsui\r\n---------------\r\n\r\nFor security reasons, you may want to run a webserver (like Apache or nginx) in front of your PowerDNS webserver as a reverse proxy using SSL.\r\nAs a best pratice, it is recommended to apply use SSL for the traffic between the end-user and the application.\r\n\r\nYou can read this [HOWTO](http://blog.nachtarbeiter.net/2010/02/16/monitoring-powerdns-via-the-internal-web-server/) to see how.\r\n\r\nFor security reasons, you probably want to use the same webserver for authentication purpose.\r\n\r\nYou can read this [mod_auth_ldap - Apache HTTP Server](httpd.apache.org/docs/2.0/mod/mod_auth_ldap.html)\r\n\r\nE.g. you might want use a SSL connection and authenticate your co-workers using the internal LDAP or database server of your company intranet.\r\n\r\nContributing to yapdnsui\r\n------------------------\r\n\r\n* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet\r\n* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it\r\n* Fork the project\r\n* Use a specific branch for your changes (one bonus point if it's prefixed with 'feature/') \r\n* _write tests_, doc, commit and push until you are happy with your contribution\r\n* Send a pull request\r\n* Please try not to mess with the package, version, or history\r\n\r\nLicense\r\n-------\r\n\r\nThis program is free software; you can redistribute it and/or modify it under the terms of the [GNU General Public License](http://www.gnu.org/licenses/gpl.html) as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\r\n\r\nThis program comes without any warranty.\r\n\r\nCredits\r\n-------\r\n\r\n* yaPDNSui is built with the awesome [NodeJS](http://nodejs.org) and [Express](http://expressjs.com).\r\n\r\n* Charts: [http://www.highcharts.com/](http://www.highcharts.com/)\r\n\r\n* Layout & CSS: [http://twitter.github.com/bootstrap/](http://twitter.github.com/bootstrap/)\r\n\r\n* Favicon from: [http://glyphicons.com/](http://glyphicons.com/)\r\n\r\n* Apple touch icon from: [http://findicons.com/search/leaf](http://findicons.com/search/leaf)\r\n\r\n* PowerDNS [http://www.powerdns.com/](http://www.powerdns.com/)\r\n\r\n* Thanks to PDNSui [https://github.com/leucos/pdnsui/](https://github.com/leucos/pdnsui/)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}